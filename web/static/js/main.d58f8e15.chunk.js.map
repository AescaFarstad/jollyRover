{"version":3,"sources":["serviceWorker.js","LogView.tsx","LogControls.tsx","DrawControls.tsx","lib/wasm-arrays.js","Input.ts","HowTo.tsx","RootView.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","LogView","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","textarea","React","createRef","inherits","createClass","key","value","current","scrollTop","scrollHeight","react_default","a","createElement","className","id","ref","rows","readOnly","props","log","Component","LogTypes","LogControls","map","index","Button_default","variant","onClick","onToggle","DrawSettings","DrawControls","settings","ccallArrays","func","returnType","paramTypes","params","_ref","undefined","_ref$heapIn","heapIn","_ref$heapOut","heapOut","_ref$returnArraySize","returnArraySize","Module","res","error","heapMap","HEAP8","Int8Array","HEAPU8","Uint8Array","HEAP16","Int16Array","HEAPU16","Uint16Array","HEAP32","Int32Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","returnTypeParam","parameters","parameterTypes","bufs","p","isArray","typedArray","i","buf","_malloc","BYTES_PER_ELEMENT","set","console","push","ccall","e","b","_free","returnData","v","exports","cwrapArrays","_ref2","_ref2$heapIn","_ref2$heapOut","_ref2$returnArraySize","isloaded","getIsLoaded","getLogSettings","getFakeArray","getDrawSettings","result","Math","random","NavTab","github","HowTo","href","RootViewState","activeTab","logSettings","drawSettings","showTutorial","RootView","logView","print","text","prototype","slice","join","setState","toConsumableArray","state","scrollToBottom","handleSelect","tab","handleLogSettingToggle","GameInput","handleDrawSettingToggle","onTutorialOK","event","document","cookie","tmp","HOW_TO","latePrint","LOG","LogView_LogView","LOG_CONTROL","LogControls_LogControls","DRAW_CONTROL","DrawControls_DrawControls","HowTo_HowTo","popUp","Modal_default","Dialog","Header","Title","Body","Footer","Nav_default","activeKey","onSelect","Item","Link","eventKey","activePanel","requestAnimationFrame","mainLoop","rootView","stamp","wasmLoaded","ReactDOM","render","RootView_RootView","getElementById","xhr_loaded","parseConfig","navigator","serviceWorker","ready","then","registration","unregister","xhr","XMLHttpRequest","status","response","cookieValue","split","find","row","startsWith","ex","globalConfig","tutorial","open","responseType","onload","send"],"mappings":"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","file":"static/js/main.d58f8e15.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport class LogView extends React.Component<any, any> \n{\n\t\n\ttextarea = React.createRef<HTMLTextAreaElement>();\n\t\n\tpublic scrollToBottom()\n\t{\n\t\tthis.textarea.current.scrollTop = this.textarea.current.scrollHeight;\n\t}\n\t\n    public render() \n    {\n        return (<textarea className=\"emscripten\" id=\"output\" ref={this.textarea} rows={8} readOnly={true} value={this.props.log}/>);\n    }\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nconst LogTypes = [\n\t\t\t\"UNIQUE\",\n\t\t\t\"ERROR_\",\n\t\t\t\"ANONYMOS\",\n\t\t\t\n\t\t\t\"NET\",\n\t\t\t\"GAME\",\n\t\t\t\"TASK\",\n\t\t\t\"INPUT_\",\n\t\t\t\n\t\t\t\"NET_MESSAGE\",\n\t\t\t\"NET_BRIEF\",\n\t\t\t\"SUBTASK\",\n\t\t\t\"FILE_SYSTEM\",\n\t\t\t\"HARD_LOG\",\n\t\t\t\n\t\t\t\"Z\"\n\t\t]\n\nexport class LogControls extends React.Component<any, any> \n{\n    public render() \n    {\n        return (\n\t\t\t<div className=\"btnHolder\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.log.map((value, index) => {\n\t\t\t\t\t\t\treturn <Button className=\"logSettingButton\" key={index} variant={value ? \"success\" : \"primary\"} onClick={(a) => this.props.onToggle(index)} >{LogTypes[index]}</Button>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</div>\n\t\t);\n    }\n}\n\n\n","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nconst DrawSettings = [\t\t\t\n\t\t\"layer1\",\n\t\t\"remnants\",\n\t\t\"layer2\",\n\t\t\"creeps\",\n\t\t\"cars\",\n\t\t\"projectiles\",\n\t\t\"layer3\",\n\t\t\"formations_D\",\n\t\t\"connections_D\",\n\t\t\"formAgro_D\",\n\t\t\"explosions\",\n\t\t\"debug_D\",\n\t\t\"threat_D\",\n\t\t\"obstacles_D\",\n\t\t\"input\",\n\t\t\"hud\",\n\t\t\"flyingMessage\",\n\t\t\"fps_D\",\n\t\t\"timing_D\",\n\t\t\"scores\"\n\t];\n\nexport class DrawControls extends React.Component<any, any> \n{\n    public render() \n    {\n        return (\n\t\t\t<div className=\"btnHolder\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.settings.map((value, index) => {\n\t\t\t\t\t\t\treturn <Button className=\"drawSettingButton\" key={index} variant={value ? \"success\" : \"primary\"} onClick={(a) => this.props.onToggle(index)} >{DrawSettings[index]}</Button>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</div>\n\t\t);\n    }\n}","/* eslint no-undef: \"off\" */\r\n\r\nexport const ccallArrays = (func, returnType, paramTypes, params, {heapIn=\"HEAPF32\", heapOut=\"HEAPF32\", returnArraySize=1}={}) => {\r\n\r\n\tif (!Module)\r\n\t{\r\n\t\tconsole.log(\"Module undefined\");\r\n\t\treturn; \r\n\t}\r\n    const heapMap = {}\r\n    heapMap.HEAP8 = Int8Array // int8_t\r\n    heapMap.HEAPU8 = Uint8Array // uint8_t\r\n    heapMap.HEAP16 = Int16Array // int16_t\r\n    heapMap.HEAPU16 = Uint16Array // uint16_t\r\n    heapMap.HEAP32 = Int32Array // int32_t\r\n    heapMap.HEAPU32 = Uint32Array // uint32_t\r\n    heapMap.HEAPF32 = Float32Array // float\r\n    heapMap.HEAPF64 = Float64Array // double\r\n\r\n    let res\r\n    let error\r\n    paramTypes = paramTypes || []\r\n    const returnTypeParam = returnType===\"array\" ? \"number\" : returnType\r\n    const parameters = []\r\n    const parameterTypes = []\r\n    const bufs = []\r\n\r\n    try {\r\n        if (params) {\r\n            for (let p=0; p<params.length; p++) {\r\n\r\n                if (paramTypes[p] === \"array\" || Array.isArray(params[p])) {\r\n\r\n                    const typedArray = new heapMap[heapIn](params[p].length)\r\n\r\n                    for (let i=0; i<params[p].length; i++) {\r\n                        typedArray[i] = params[p][i]\r\n                    }\r\n\r\n                    const buf = Module._malloc(typedArray.length * typedArray.BYTES_PER_ELEMENT)\r\n\r\n                    switch (heapIn) {\r\n                        case \"HEAP8\": case \"HEAPU8\":\r\n                            Module[heapIn].set(typedArray, buf)\r\n                            break\r\n                        case \"HEAP16\": case \"HEAPU16\":\r\n                            Module[heapIn].set(typedArray, buf >> 1)\r\n                            break\r\n                        case \"HEAP32\": case \"HEAPU32\": case \"HEAPF32\":\r\n                            Module[heapIn].set(typedArray, buf >> 2)\r\n                            break\r\n                        case \"HEAPF64\":\r\n                            Module[heapIn].set(typedArray, buf >> 3)\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.log(\"unexpected. 312cr\");\r\n\t\t\t\t\t\t\tbreak;\r\n                    }\r\n\r\n                    bufs.push(buf)\r\n                    parameters.push(buf)\r\n                    parameters.push(params[p].length)\r\n                    parameterTypes.push(\"number\")\r\n                    parameterTypes.push(\"number\")\r\n\r\n                } else {\r\n                    parameters.push(params[p])\r\n                    parameterTypes.push(paramTypes[p]===undefined ? \"number\" : paramTypes[p])\r\n                }\r\n            }\r\n        }\r\n\r\n        res = Module.ccall(func, returnTypeParam, parameterTypes, parameters)\r\n    } catch (e) {\r\n        error = e\r\n    } finally {\r\n        for (let b=0; b<bufs.length; b++) {\r\n            Module._free(bufs[b])\r\n        }\r\n    }\r\n\r\n    if (error) throw error\r\n\r\n    if (returnType===\"array\") {\r\n        const returnData = []\r\n\r\n        for (let v=0; v<returnArraySize; v++) {\r\n            returnData.push(Module[heapOut][res/heapMap[heapOut].BYTES_PER_ELEMENT+v])\r\n        }\r\n\r\n        return returnData\r\n    } else {\r\n        return res\r\n    }\r\n}\r\n\r\nexport const cwrapArrays = (func, returnType, paramTypes, {heapIn=\"HEAPF32\", heapOut=\"HEAPF32\", returnArraySize=1}={}) => {\r\n    return params => ccallArrays(func, returnType, paramTypes, params, {heapIn, heapOut, returnArraySize})\r\n}\r\n\r\nif (typeof window==\"undefined\")\r\n{\r\n\texports.ccallArrays = ccallArrays;\r\n\texports.cwrapArrays = cwrapArrays;\r\n}","import {ccallArrays} from \"lib/wasm-arrays\"\n\ndeclare var Module: any;\n\nlet isloaded = false;\n\nfunction getIsLoaded()\n{\n\tif (!isloaded)\n\t\tisloaded = Module.ccall('isLoaded', Boolean,\t[],[]);\n\t\t\n\treturn isloaded;\n}\n\nexport function toggleLogSetting(index:number)\n{\n\t//console.log(\"function toggleLogSetting(index:number)\");\n\tif (!Module || !Module.ccall || !getIsLoaded())\n\t{\n\t\tconsole.log(\"No wasm attached. ccall ignored.\");\n\t\treturn;\n\t}\n\t\n\tModule.ccall(\n\t\t'toggleLogSetting',\t// name of C function \n\t\tnull,\t// return type\n\t\t['number'],\t// argument types\n\t\t[index]\t// arguments\n\t);\n}\n\nexport function toggleDrawSetting(index:number)\n{\n\t//console.log(\"function toggleDrawSetting(index:number)\");\n\tif (!Module || !Module.ccall || !getIsLoaded())\n\t{\n\t\tconsole.log(\"No wasm attached. ccall ignored.\");\n\t\treturn;\n\t}\n\t\n\tModule.ccall(\n\t\t'toggleDrawSetting',\t// name of C function \n\t\tnull,\t// return type\n\t\t['number'],\t// argument types\n\t\t[index]\t// arguments\n\t);\n}\n\nexport function getLogSettings():Array<boolean>\n{\n\tconst expectedSize = 13;\n\t\n\t//console.log(\"function getLogSettings()\");\n\tif (!Module || !Module.ccall  || !getIsLoaded())\n\t{\n\t\tconsole.log(\"No wasm attached. ccall ignored.\");\n\t\treturn getFakeArray(expectedSize);\n\t}\n\t\n\tvar result = ccallArrays(\"getLogSettings\", \"array\", null, null, {heapIn: \"HEAP8\", heapOut: \"HEAP8\", returnArraySize: expectedSize});\n\treturn result;\n}\n\nexport function getDrawSettings():Array<boolean>\n{\n\tconst expectedSize = 20;\n\t\n\t//console.log(\"function getDrawSettings()\");\n\tif (!Module || !Module.ccall || !getIsLoaded())\n\t{\n\t\tconsole.log(\"No wasm attached. ccall ignored.\");\n\t\treturn getFakeArray(expectedSize);\n\t}\n\t\n\tvar result = ccallArrays(\"getDrawSettings\", \"array\", null, null, {heapIn: \"HEAP8\", heapOut: \"HEAP8\", returnArraySize: expectedSize});\n\treturn result;\n}\n\nfunction getFakeArray(length:number):Array<boolean>\n{\n\tlet result = [];\n\tfor(let i:number = 0; i < length; i++)\n\t{\n\t\tresult.push(Math.random() > 0.5 ? 1 : 0);\n\t}\n\treturn result;\n}","import React from 'react';\n\nconst github = \"https://github.com/AescaFarstad/jollyRover\";\n\nexport class HowTo extends React.Component<any, any> \n{\n    public render() \n    {\n        return (\n\t\t\t<div className=\"howto\">\n\t\t\t\t<div>\n\t\t\t\t•  Draw a path starting and ending at the bottom edge. Your tank will follow it.\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t•  Run over soldiers -> earn trophies on your return.\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t•  Crash into other players at higher speed and steal their trophies.\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t•  Your friends can play with you, send them the link!\n\t\t\t\t</div>\n\t\t\t\t<div className=\"howto-mini\">\n\t\t\t\tThe source code is available here: <a href={github}>{github}</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n    }\n}","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\nimport { LogView } from './LogView';\nimport { LogControls } from './LogControls';\nimport { DrawControls } from './DrawControls';\nimport  * as GameInput  from 'Input';\nimport { HowTo } from './HowTo';\n\ndeclare var Module: any;\n\n\nexport enum NavTab\n{\n    LOG = \"LOG\",\n    LOG_CONTROL = \"LOG_CONTROL\",\n    DRAW_CONTROL = \"DRAW_CONTROL\",\n    HOW_TO = \"HOW_TO\"\n}\n\nexport class RootViewState\n{\n\tactiveTab:NavTab;\n\tlog:Array<String> = [];\t\n\tlogSettings:Array<boolean> = [];\n\tdrawSettings:Array<boolean> = [];\n\tshowTutorial:boolean = false;\n\t\n}\n\nexport class RootView extends React.Component<any, RootViewState> \n{\n\tlogView = React.createRef<LogView>();\n\t\n    constructor(props: any)\n    {\n        super(props);\n\t\tlet tmp = new RootViewState();\n\t\ttmp.activeTab = NavTab.HOW_TO;\n\t\ttmp.logSettings = GameInput.getLogSettings();\n\t\ttmp.drawSettings = GameInput.getDrawSettings();\n\t\ttmp.showTutorial = false;\n\t\tthis.state = tmp;\n\t\t\n\t\t(document as any).latePrint = this.print;\n\t\t\n    }\n\t\n\tpublic print = (...args) =>\n    {\n\t\tlet text = args[0];\n        if (args.length > 1)\n\t\t\ttext = Array.prototype.slice.call(args).join(\" \");\n\t\tconsole.log(text);\n\t\tthis.setState({log:[...this.state.log, text]});\n\t\tif (this.logView.current)\n\t\t\tthis.logView.current.scrollToBottom();\n    }   \n\t\n\thandleSelect = (tab:any) =>\n    {\n\t\tthis.setState({activeTab:tab});\n\t\tif (this.logView.current)\n\t\t\tthis.logView.current.scrollToBottom();\n    }\n\t\n\thandleLogSettingToggle = (index:number) =>\n    {\n\t\tGameInput.toggleLogSetting(index);\n\t\tlet result = GameInput.getLogSettings();\n        this.setState({logSettings:result});\n    }\n\t\n\thandleDrawSettingToggle = (index:number) =>\n    {\n\t\tGameInput.toggleDrawSetting(index);\n\t\tlet result = GameInput.getDrawSettings();\n        this.setState({drawSettings:result});\n\t}\n\t\n\tonTutorialOK = (event:any) =>\n    {\n\t\tthis.setState({showTutorial:false});\n\t\tdocument.cookie = \"name=tutorialDone\";\n    }\n\t\n\tprivate activePanel(tab:NavTab)\n    {\n        switch(tab)\n        {\n            case NavTab.LOG: return <LogView ref={this.logView} className=\"tabContent\" log={this.state.log.join(\"\\n\")}/>;\n            case NavTab.LOG_CONTROL: return <LogControls className=\"tabContent\" log={this.state.logSettings} onToggle={this.handleLogSettingToggle}/>;\n            case NavTab.DRAW_CONTROL: return <DrawControls className=\"tabContent\" settings={this.state.drawSettings} onToggle={this.handleDrawSettingToggle}/>;\n            case NavTab.HOW_TO: return <HowTo className=\"tabContent\" onToggle={this.handleDrawSettingToggle}/>;\n        }\n        return null;\n    } \n\n    public render() \n    {\n\t\tlet popUp:any = \"\";\n\t\tif (this.state.showTutorial)\n\t\t{\n\t\t\tpopUp = (\n\t\t\t\t<Modal.Dialog onClick={this.onTutorialOK} className=\"tutorialDialog\">\n\t\t\t\t\t<Modal.Header >\n\t\t\t\t\t\t<Modal.Title>How to play</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\n\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t<HowTo/>\n\t\t\t\t\t</Modal.Body>\n\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button variant=\"primary\">Got it!</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal.Dialog>\n\t\t\t)\n\t\t}\n\t\tlet result =  (\n\t\t\t<div className=\"navContainer\">\n\t\t\t\t{popUp}\n\t\t\t\t<Nav className=\"mainNav\" variant=\"tabs\" activeKey={this.state.activeTab} onSelect={this.handleSelect}> \n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey={NavTab.LOG}>Log</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey={NavTab.LOG_CONTROL}>Log settings</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey={NavTab.DRAW_CONTROL}>Draw settings</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey={NavTab.HOW_TO}>How to play</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t</Nav>\n\t\t\t\t{this.activePanel(this.state.activeTab)}\n\t\t\t</div>\n\t\t);\n\t\treturn result;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './lib/css/bootstrap-gunmetal.css';\nimport './css.css';\nimport * as serviceWorker from './serviceWorker';\nimport { RootView } from './RootView';\nwindow.requestAnimationFrame(mainLoop);\n\nlet rootView = React.createRef<RootView>();\n\nfunction mainLoop(stamp:number) \n{\n\tif ((document as any).wasmLoaded)\n\t{\n\t\tReactDOM.render(<RootView ref={rootView}/>, document.getElementById('root'));\n\t\tif (xhr_loaded)\n\t\t\tparseConfig();\n\t}\n\telse\n\t{\n\t\trequestAnimationFrame(mainLoop);\n\t}\n}\nrequestAnimationFrame(mainLoop);\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nvar xhr_loaded = false;\nvar xhr = new XMLHttpRequest();\nxhr.open('GET', \"/config.json\", true);\nxhr.responseType = 'json';\nxhr.onload = () => {\n\txhr_loaded = true;\n\tif ((document as any).wasmLoaded)\n\t\tparseConfig();\n};\nxhr.send();\n\nfunction parseConfig() \n{\n\tif (xhr.status === 200) \n\t{\n\t\tlet response = xhr.response;\n\t\t\n\t\tlet cookieValue:any = false;\n\t\ttry\n\t\t{\n\t\t\tcookieValue = document.cookie\n\t\t\t\t\t\t\t\t.split('; ')\n\t\t\t\t\t\t\t\t.find(row => row.startsWith('name'))\n\t\t\t\t\t\t\t\t.split('=')[1];\n\t\t}\n\t\tcatch (ex) {}\n\t\tlet showTutorial = false;\n\t\tif (!cookieValue)\n\t\t{\n\t\t\tshowTutorial = response.globalConfig.tutorial;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"Skip tutorial\");\n\t\t\tshowTutorial = false;\n\t\t}\n\t\t\t\n\t\trootView.current.setState({showTutorial:showTutorial})\n\t} \n\telse \n\t{\n\t\tconsole.log(\"Failed to load config.\");\n\t\tconsole.log(xhr.status);\n\t\tconsole.log(xhr.response);\n\t}\n}\n\n\n"],"sourceRoot":""}